@using BugTracker.Helpers;
@using Microsoft.AspNet.Identity;
@using BugTracker.Models;


@{
    var db = new ApplicationDbContext();
    var ticketHelper = new TicketHelper();
    var userId = User.Identity.GetUserId();
}

<li class="dropdown notifications-menu">
    <a href="#" class="dropdown-toggle" data-toggle="dropdown">
        <i class="fa fa-bell-o"></i>
        @if (TicketHelper.GetNewUserNotificationCount() != 0)
        {
            <span class="label">
                @TicketHelper.GetNewUserNotificationCount()
            </span>
        }
    </a>
    <!--Generate notifications here-->
    <ul class="dropdown-menu">
        @if (TicketHelper.GetNewUserNotificationCount() != 0)
        {
            <li class="header">
                New
                <span class="pull-right">
                    @using (Html.BeginForm("MarkAllAsRead", "TicketNotifications"))
                    {
                        @Html.AntiForgeryToken()
                        <a href="#" onclick="$(this).closest('form').submit();">Mark All As Read</a>
                    }
                </span>
            </li>
        }
        <li>
            <ul class="menu">
                @foreach (var notification in TicketHelper.GetUnreadNotifications().OrderByDescending(t => t.Created).Take(5))
                {
                    using (Html.BeginForm("MarkAsRead", "TicketNotifications"))
                    {
                        @Html.AntiForgeryToken()
                        @Html.Hidden("NotificationId", notification.Id)
                        <li class="hover">
                            @if (ticketHelper.IsUserOnTicket(userId, notification.Ticket.Id))
                            {
                                <a href="#" onclick="$(this).closest('form').submit();">
                                    <img src="@notification.Sender.AvatarUrl" class="img-circle" style="height:20px;" /> @notification.Sender.DisplayName @notification.Subject
                                </a>
                            }
                            else
                            {
                                <a href="#" onclick="$(this).closest('form').submit();">
                                    <img src="@notification.Sender.AvatarUrl" class="img-circle" style="height:20px;" /> @notification.Sender.DisplayName @notification.Subject
                                </a>
                            }
                        </li>
                    }
                }
            </ul>
        </li>
        @if (TicketHelper.GetReadUserNotificationCount() != 0)
        {
            <li class="header">Earlier</li>
        }
        @if (User.IsInRole("Admin"))
        {
            foreach (var notification in db.TicketNotifications.ToList().OrderByDescending(t => t.Created).Take(5))
            {
                <li>
                    <ul class="menu">
                        <li>
                            <a href="@Url.Action("Details", "Tickets", new { Id = notification.Ticket.Id})">
                                <img src="@notification.Sender.AvatarUrl" class="img-circle" style="height:20px;" /> @notification.Sender.DisplayName @notification.Subject
                            </a>
                        </li>
                    </ul>
                </li>

            }
        }
        else
        {
            foreach (var notification in TicketHelper.GetReadNotifications().OrderByDescending(t => t.Created).Take(5 - TicketHelper.GetNewUserNotificationCount()))
            {
                <li>
                    <ul class="menu">
                        <li>
                            @if (ticketHelper.IsUserOnTicket(userId, notification.Ticket.Id))
                            {
                                <a href="@Url.Action("Details", "Tickets", new { Id = notification.Ticket.Id })">
                                    <img src="@notification.Sender.AvatarUrl" class="img-circle" style="height:20px;" /> @notification.Sender.DisplayName @notification.Subject
                                </a>
                            }
                            else
                            {
                                <a href="#">
                                    <img src="@notification.Sender.AvatarUrl" class="img-circle" style="height:20px;" /> @notification.Sender.DisplayName @notification.Subject
                                </a>
                            }
                        </li>
                    </ul>
                </li>
            }
        }
                   
        <li class="footer"><a href="@Url.Action("Index", "TicketNotifications")">View all</a></li>
    </ul>
</li>