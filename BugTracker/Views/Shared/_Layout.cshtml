@using BugTracker.Models;
@using Microsoft.AspNet.Identity;
@using BugTracker.Helpers;

@{ 
    var userId = User.Identity.GetUserId();
    var db = new ApplicationDbContext();
    var user = db.Users.Find(userId);
    var ticketHelper = new TicketHelper();
    var roleHelper = new UserRolesHelper();
    var projectHelper = new ProjectHelper();
    var userProjectsHelper = new UserProjectsHelper();
}

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>AdminLTE 2 | Dashboard</title>
    <!-- Tell the browser to be responsive to screen width -->
    <meta content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no" name="viewport">
    <!-- Bootstrap 3.3.7 -->
    <link href="~/Content/bootstrap.css" rel="stylesheet" />
    <!-- Font Awesome -->
    <link href="~/Content/font-awesome.min.css" rel="stylesheet" />
    <!-- Ionicons -->
    <link href="~/Content/ionicons.min.css" rel="stylesheet" />
    <!-- Theme style -->
    <link href="~/Content/AdminLTE.css" rel="stylesheet" />
    <!-- AdminLTE Skins. Choose a skin from the css/skins
     folder instead of downloading all of them to reduce the load. -->
    <link href="~/Content/_all-skins.css" rel="stylesheet" />
    <!-- Morris chart -->
    <link href="~/Content/morris.css" rel="stylesheet" />
    <!-- jvectormap -->
    <link href="~/Content/jquery-jvectormap.css" rel="stylesheet" />
    <!-- Date Picker -->
    <link href="~/Content/bootstrap-datepicker.min.css" rel="stylesheet" />
    <!-- Daterange picker -->
    <link href="~/Content/daterangepicker.css" rel="stylesheet" />
    <!-- bootstrap wysihtml5 - text editor -->
    <link href="~/Content/bootstrap3-wysihtml5.min.css" rel="stylesheet" />
    <!-- Favicon -->
    <link href="~/favicon-16x16.png" rel="shortcut icon" />
    <link href="~/Content/dataTables.bootstrap.css" rel="stylesheet" />
    <link href="~/Content/jquery.dataTables.min.css" rel="stylesheet" />
    <link href="~/Content/Custom.css" rel="stylesheet" />

    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
    <script src="https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js"></script>
    <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
    <!-- Google Font -->
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,600,700,300italic,400italic,600italic">
</head>
<body class="hold-transition skin-blue sidebar-mini">
    <div class="wrapper">

        <header class="main-header" style="position:fixed">
            <!-- Logo -->
            <a href="@Url.Action("Index", "Home")">
                <div class="logo">
                    <!-- mini logo for sidebar mini 50x50 pixels -->
                    <span class="logo-mini"><b>B</b>Trkr</span>
                    <!-- logo for regular state and mobile devices -->
                    <span class="logo-lg"><b>Bug</b>Tracker</span>
                </div>
            </a>
            <!-- Header Navbar: style can be found in header.less -->
            <nav class="navbar navbar-fixed-top">
                <!-- Sidebar toggle button-->
                <a href="#" class="sidebar-toggle" data-toggle="push-menu" role="button">
                    <span class="sr-only">Toggle navigation</span>
                </a>

                <div class="navbar-custom-menu">
                    <ul class="nav navbar-nav">
                        <!-- Notifications: style can be found in dropdown.less -->
                        @Html.Partial("NotificationsPartial")
                        <!-- Tickets: style can be found in dropdown.less -->
                        <li class="dropdown tasks-menu">
                            <a href="#" class="dropdown-toggle" data-toggle="dropdown">
                                <i class="fa fa-ticket"></i>
                                @if (ticketHelper.MyTickets(userId, roleHelper.ListUserRoles(user.Id).FirstOrDefault()).Count() != 0)
                                {
                                    <span class="label">
                                        @ticketHelper.MyTickets(userId, roleHelper.ListUserRoles(user.Id).FirstOrDefault()).Count()
                                    </span>
                                }
                            </a>
                            <!--Generate a ticketlist here-->
                            <ul class="dropdown-menu">
                                @if (User.IsInRole("Admin"))
                                {
                                <li class="header">
                                    There are @ticketHelper.MyTickets(userId, roleHelper.ListUserRoles(user.Id).FirstOrDefault()).Count() open tickets.
                                </li>
                                }
                                else
                                {
                                    <li class="header">
                                        You have @ticketHelper.MyTickets(userId, roleHelper.ListUserRoles(user.Id).FirstOrDefault()).Count() open tickets.
                                    </li>
                                }
                                @foreach (var ticket in ticketHelper.MyTickets(userId, roleHelper.ListUserRoles(user.Id).FirstOrDefault()).OrderBy(t => t.TicketPriority.Id).Take(10))
                                {
                                    <li>
                                        <ul class="menu">
                                            <li>
                                                <a href="@Url.Action("Details", "Tickets", new { Id = ticket.Id })">
                                                    <h3>
                                                        @ticket.Title
                                                        <i class="fa fa-circle pull-left @ticketHelper.TicketsByPriority(ticket.TicketPriority.Name)"></i>
                                                        <small class="label label-default pull-right">@ticket.TicketStatus.Name</small>
                                                    </h3>
                                                    <div>
                                                        @ticket.Project.Name -

                                                        @ticket.TicketPriority.Name

                                                    </div>
                                                </a>
                                            </li>
                                        </ul>
                                    </li>
                                }
                                <li class="footer">
                                    <a href="@Url.Action("Index", "Home")">View all tickets </a>
                                </li>
                            </ul>
                        </li>
                        <!-- User Account: style can be found in dropdown.less -->
                        <li class="dropdown user user-menu">
                            <a href="#" class="dropdown-toggle" data-toggle="dropdown">
                                <img src="@user.AvatarUrl" class="user-image" alt="User Image">
                                <span class="hidden-xs">@user.FullName</span>
                            </a>
                            <ul class="dropdown-menu">
                                <!-- User image -->
                                <li class="user-header">
                                    <div class="back">
                                        <img src="@user.AvatarUrl" class="img-circle" alt="User Image">
                                        <p>
                                            @user.FirstName @user.LastName - @roleHelper.ListUserRoles(user.Id).FirstOrDefault()
                                        </p>
                                    </div>
                                </li>
                                <!-- Menu Body -->
                                @*<li class="user-body">
                                        <div class="row">
                                            <div class="col-xs-4 text-center">
                                                <a href="#">Followers</a>
                                            </div>
                                            <div class="col-xs-4 text-center">
                                                <a href="#">Sales</a>
                                            </div>
                                            <div class="col-xs-4 text-center">
                                                <a href="#">Friends</a>
                                            </div>
                                        </div>
                                         /.row
                                    </li>*@
                                <!-- Menu Footer-->
                                <li class="user-footer">
                                    <div class="pull-left">
                                        @Html.ActionLink("Profile", "UserProfile", "Home", null, new { @class = "btn btn-flat" })
                                    </div>
                                    <div class="pull-right">
                                        @using (Html.BeginForm("LogOff", "Account", FormMethod.Post, new { role = "form" }))
                                        {
                                            @Html.AntiForgeryToken();
                                            <button class="btn btn-flat">Sign Out</button>
                                        }
                                    </div>
                                </li>
                            </ul>
                        </li>
                        <!-- Control Sidebar Toggle Button -->
                        <li>
                            <a href="#" data-toggle="control-sidebar"><i class="fa fa-gears"></i></a>
                        </li>
                    </ul>
                </div>
            </nav>
        </header>
        <!-- Left side column. contains the logo and sidebar -->
        <aside class="main-sidebar" style=" position:fixed">
            <!-- sidebar: style can be found in sidebar.less -->
            <section class="sidebar">
                <!-- Sidebar user panel -->
                <div class="user-panel">
                    <div class="pull-left image">
                        <img src="@user.AvatarUrl" class="img-circle" alt="User Image">
                    </div>
                    <div class="pull-left info">
                        <p>@user.FullName</p>
                        <a href="#"><i class="fa fa-user"></i> @roleHelper.ListUserRoles(user.Id).FirstOrDefault()</a>
                    </div>
                </div>
                <!-- SEARCH FORM (Make it work or take it out) -->
                @*<form action="#" method="get" class="sidebar-form">
                    <div class="input-group">
                        <input type="text" name="q" class="form-control" placeholder="Search...">
                        <span class="input-group-btn">
                            <button type="submit" name="search" id="search-btn" class="btn btn-flat">
                                <i class="fa fa-search"></i>
                            </button>
                        </span>
                    </div>
                </form>*@
                <!-- SIDEBAR MENU: : style can be found in sidebar.less -->
            <br />
            <ul class="sidebar-menu" data-widget="tree">
                <li class="header">MAIN NAVIGATION</li>
                <!-- USER ROLE MANAGEMENT LINK -->
                @if (User.IsInRole("Admin"))
                {
                    <li class="treeview">
                        <a href="@Url.Action("UserIndex", "Admin")">
                            <i class="fa fa-user-circle"></i> <span>User Role Manager</span>
                        </a>
                    </li>
                }
                <!-- UNASSIGNED PROJECTS TAB -->
                @if (User.IsInRole("Admin") && projectHelper.UnassignedProjects().Count() != 0 || User.IsInRole("Project Manager") && projectHelper.UnassignedProjects().Count() != 0)
                {
                    <li class="treeview">
                        <a href="#">
                            <i class="fa fa-exclamation-triangle"></i> <span>Unassigned Projects</span>
                            <span class="pull-right-container">
                                <i class="fa fa-angle-left pull-right"></i>
                            </span>
                        </a>
                        <ul class="treeview-menu">
                            @foreach (var newProjects in projectHelper.UnassignedProjects())
                            {
                                <li>
                                    <a href="@Url.Action("Details", "Projects", new { Id = newProjects.Id })">
                                        <i class="fa fa-exclamation-triangle text-yellow"></i> @newProjects.Name
                                    </a>
                                </li>
                            }
                        </ul>
                    </li>
                }
                <!-- UNASSIGNED TICKETS TAB -->
                @if (User.IsInRole("Admin") && ticketHelper.AllUnassignedTickets().Count() != 0)
                {
                    <li class="treeview">
                        <a href="#">
                            <i class="fa fa-exclamation-triangle"></i> <span>Unassigned Tickets</span>
                            <span class="pull-right-container">
                                <i class="fa fa-angle-left pull-right"></i>
                            </span>
                        </a>
                        <ul class="treeview-menu">
                            @foreach (var unTicket in ticketHelper.AllUnassignedTickets())
                            {
                                <li class="treeview">
                                    <a href="@Url.Action("Details", "Tickets", new { Id = unTicket.Id })">
                                        <i class="fa fa-exclamation-triangle text-yellow"></i> @unTicket.Title
                                    </a>
                                </li>
                            }
                        </ul>
                    </li>
                }
                @if (User.IsInRole("Project Manager") && ticketHelper.UserUnassignedTickets(user.Id).Count() != 0)
                {
                    <li class="treeview">
                        <a href="#">
                            <i class="fa fa-exclamation-triangle"></i> <span>Unassigned Tickets</span>
                            <span class="pull-right-container">
                                <i class="fa fa-angle-left pull-right"></i>
                            </span>
                        </a>
                        <ul class="treeview-menu">
                            @foreach (var unTicket in ticketHelper.UserUnassignedTickets(user.Id))
                            {
                                <li class="treeview">
                                    <a href="@Url.Action("Details", "Tickets", new { Id = unTicket.Id })">
                                        <i class="fa fa-exclamation-triangle text-yellow"></i> @unTicket.Title
                                    </a>
                                </li>
                            }
                        </ul>
                    </li>
                }
                <!-- MY PROJECTS TAB -->
                <li class="treeview">
                    <a href="#">
                        <i class="fa fa-list-alt"></i> <span>My Projects</span>
                        <span class="pull-right-container">
                            <i class="fa fa-angle-left pull-right"></i>
                        </span>
                    </a>
                    <ul class="treeview-menu">
                        @foreach (var myProjects in user.Projects.ToList())
                        {
                            <li class="treeview">
                                <a href="#">
                                    <i class="fa fa-dot-circle-o"></i> @myProjects.Name
                                    <span class="pull-right-container">
                                        <i class="fa fa-angle-left pull-right"></i>
                                    </span>
                                </a>
                                <ul class="treeview-menu">
                                    <li>
                                        <a href="@Url.Action("Details", "Projects", new { Id = myProjects.Id })">
                                            <i class="fa fa-info-circle"></i> Project Details
                                        </a>
                                    </li>
                                    @foreach (var myTickets in ticketHelper.TicketsOnProject(myProjects.Id).OrderBy(t => t.TicketPriority.Id))
                                    {
                                        if (User.IsInRole("Admin") || User.IsInRole("Project Manager") || User.IsInRole("Developer") && user.Id == myTickets.AssignedToUserId || User.IsInRole("Submitter") && user.Id == myTickets.OwnerUserId)
                                        {
                                            <li class="treeview">
                                                <a href="@Url.Action("Details", "Tickets", new { Id = myTickets.Id })">
                                                    <i class="fa fa-circle @ticketHelper.TicketsByPriority(myTickets.TicketPriority.Name)"></i> @myTickets.Title
                                                </a>
                                            </li>
                                        }

                                    }
                                </ul>
                            </li>
                        }
                    </ul>
                </li>
                @if (User.IsInRole("Admin") || User.IsInRole("Project Manager"))
                {
                    <li>
                        <a href="@Url.Action("Create", "Projects")">
                            <i class="fa fa-plus-circle"></i> Create Project
                        </a>
                    </li>
                }
                @if (User.IsInRole("Submitter"))
                {
                    <li>
                        <a href="@Url.Action("Create", "Tickets")">
                            <i class="fa fa-plus-circle"></i> Create Ticket
                        </a>
                    </li>
                }
                <li>
                    <a href="@Url.Action("Index", "Home")">
                        <i class="fa fa-home"></i> Back To Dashboard
                    </a>
                </li>
            </ul>
                <div class="navbar-fixed-bottom text-center pull-left copy">
                    <small>
                        Copyright &copy; All rights reserved<br />
                        Designed by <b><a href="https://adminlte.io">AdminLTE </a></b><br />
                        Customized by <b>David Etzel</b><br /><br />
                    </small>
                </div>
            </section>
        </aside>

        <!-- Content Wrapper. Contains page content -->
        <div class="content-wrapper" style="margin-top:50px; background-image: url('/Images/Emerald.JPG'); background-size:cover;">
            <div class="content">
                <div class="row">
                    <div class="col-xs-12" style="">
                        <div style="height: 91vh; margin-bottom: 0; background-image: url('/Images/semitransparentWhite-25.png');">
                            <section class="contain">
                                @RenderBody()
                            </section>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Control Sidebar -->
    <aside class="control-sidebar control-sidebar-dark" style="display: none;">
        <!-- Create the tabs -->
        <ul class="nav nav-tabs nav-justified control-sidebar-tabs">
            <li><a href="#control-sidebar-home-tab active" data-toggle="tab"><i class="fa fa-photo"></i></a></li>
            <li><a href="#control-sidebar-settings-tab" data-toggle="tab"><i class="fa fa-lock"></i></a></li>
        </ul>
        <!-- Tab panes -->
        <div class="tab-content">
            <!-- Home tab content -->
            <div class="tab-pane active" id="control-sidebar-home-tab">
                <h3 class="control-sidebar-heading"><strong>Update Your Avatar</strong></h3>
                @*@Html.Partial("UpdateAvatarPartial")*@
            </div>
            <!-- /.tab-pane --> 
            <!-- Settings tab content -->
            <div class="tab-pane" id="control-sidebar-settings-tab">
                <h3 class="control-sidebar-heading"><strong>Change Password</strong></h3>
                @*@Html.Partial("ChangePasswordPartial")*@
            </div>
            <!-- /.tab-pane -->
        </div>
    </aside>
    <!-- /.control-sidebar -->
    <!-- Add the sidebar's background. This div must be placed
    immediately after the control sidebar -->
    <div class="control-sidebar-bg"></div>


    <!-- ./wrapper -->
    <!-- jQuery 3 -->
    <script src="~/Scripts/jquery.min.js"></script>
    <!-- jQuery UI 1.11.4 -->
    <script src="~/Scripts/jquery-ui.min.js"></script>
    <!-- Resolve conflict in jQuery UI tooltip with Bootstrap tooltip -->
    <script>$.widget.bridge('uibutton', $.ui.button);</script>
    <!-- Bootstrap 3.3.7 -->
    <script src="~/Scripts/bootstrap.min.js"></script>
    <!-- Morris.js charts -->
    <script src="~/Scripts/raphael.min.js"></script>
    <script src="~/Scripts/morris.min.js"></script>
    <!-- Sparkline -->
    <script src="~/Scripts/jquery.sparkline.min.js"></script>
    <!-- jvectormap -->
    <script src="~/Scripts/jquery-jvectormap-1.2.2.min.js"></script>
    <script src="~/Scripts/jquery-jvectormap-world-mill-en.js"></script>
    <!-- jQuery Knob Chart -->
    <script src="~/Scripts/jquery.knob.min.js"></script>
    <!-- daterangepicker -->
    <script src="~/Scripts/moment.min.js"></script>
    <script src="~/Scripts/daterangepicker.js"></script>
    <!-- datepicker -->
    <script src="~/Scripts/bootstrap-datepicker.min.js"></script>
    <!-- Bootstrap WYSIHTML5 -->
    <script src="~/Scripts/bootstrap3-wysihtml5.all.min.js"></script>
    <!-- Slimscroll -->
    <script src="~/Scripts/jquery.slimscroll.min.js"></script>
    <!-- FastClick -->
    <script src="~/Scripts/fastclick.js"></script>
    <!-- AdminLTE App -->
    <script src="~/Scripts/adminlte.min.js"></script>
    <script src="~/Scripts/jquery.dataTables.min.js"></script>
    <script src="~/Scripts/dataTables.bootstrap.js"></script>
    <script src="~/Scripts/dashboard.js"></script>
    <script src="~/Scripts/Custom.js"></script>
    @*<!-- AdminLTE dashboard demo (This is only for demo purposes) -->
        <script src="~/Scripts/dashboard.js"></script>
        <!-- AdminLTE for demo purposes -->
        <script src="~/Scripts/demo.js"></script>*@
    @*<script>
            $("#my-box").refreshBox({
              // The URL for the source.
              source: '',
              // GET query paramaters (example: {search_term: 'layout'}, which renders to URL/?search_term=layout).
              params: {},
              // The CSS selector to the refresh button.
              trigger: '.refresh-btn',
              // The CSS selector to the target where the content should be rendered. This selector should exist within the box.
              content: '.box-body',
              // Whether to automatically render the content.
              loadInContent: true,
              // Response type (example: 'json' or 'html')
              responseType: '',
              // The HTML template for the ajax spinner.
              overlayTemplate: '<div class="overlay"><div class="fa fa-refresh fa-spin"></div></div>',
              // Called before the ajax request is made.
              onLoadStart: function() {
                // Do something before sending the request.
              },
              // Called after the ajax request is made.
              onLoadDone: function(response) {
                // Do something after receiving a response.
              }
            })
        </script>*@
</body>

</html>
@RenderSection("scripts", required:false)